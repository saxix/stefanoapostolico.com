<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Stefano Apostolico's Blog</title><link href="http://stefanoapostolico.com/" rel="alternate"></link><link href="http://stefanoapostolico.com/feeds/all.atom.xml" rel="self"></link><id>http://stefanoapostolico.com/</id><updated>2015-10-08T00:00:00+02:00</updated><entry><title>cx_Oracle and System Integrity Protection (El Capitan)</title><link href="http://stefanoapostolico.com/2015/10/08/install_cx_oracle_with_sip_enabled.html" rel="alternate"></link><updated>2015-10-08T00:00:00+02:00</updated><author><name>Stefano Apostolico</name></author><id>tag:stefanoapostolico.com,2015-10-08:2015/10/08/install_cx_oracle_with_sip_enabled.html</id><summary type="html">&lt;p&gt;With the relase of El Capitan, Apple has enabled a new default security
feature named System Integrity Protection, also called rootless.
This may cause some apps, utilities, and scripts to not function at all,
even with sudo privelege, root user enabled, or admin access.
Oracle drivers seems one the these.&lt;/p&gt;
&lt;p&gt;Not interest in the long story? Here the &lt;a class="reference external" href="#solution"&gt;trick&lt;/a&gt; !!!&lt;/p&gt;
&lt;div class="section" id="system-integrity-protection"&gt;
&lt;h2&gt;System Integrity Protection&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="https://developer.apple.com/library/prerelease/mac/releasenotes/MacOSX/WhatsNewInOSX/Articles/MacOSX10_11.html"&gt;System Integrity Protection&lt;/a&gt;
is aimed at preventing Mac OS X compromise by malicious code,
whether intentionally or accidentally, and essentially what SIP does is lock down
specific system level locations in the file system while simultaneously
preventing certain processes from attaching to system-level processes.&lt;/p&gt;
&lt;p&gt;For System Integrity Protection locks down the following system level directories:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;/System&lt;/li&gt;
&lt;li&gt;/sbin&lt;/li&gt;
&lt;li&gt;/usr (with the exception of /usr/local)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;There are a lot of infos how to disable rootless,
what we want to achieve is to let cx_Oracle works without disable SIP.&lt;/p&gt;
&lt;p&gt;Let try to see what happen when we try to use cx_Oracle.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;./manage.py inspectdb --database&lt;span class="o"&gt;=&lt;/span&gt;pasport
Traceback &lt;span class="o"&gt;(&lt;/span&gt;most recent call last&lt;span class="o"&gt;)&lt;/span&gt;:
  File &lt;span class="s2"&gt;"./manage.py"&lt;/span&gt;, line 12, in &amp;lt;module&amp;gt;
    execute_from_command_line&lt;span class="o"&gt;(&lt;/span&gt;sys.argv&lt;span class="o"&gt;)&lt;/span&gt;
  ...
  ...
  File &lt;span class="s2"&gt;"TEST_VIRTUALENV/lib/python2.7/site-packages/django/db/backends/oracle/base.py"&lt;/span&gt;, line 47, in &amp;lt;module&amp;gt;
    raise ImproperlyConfigured&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Error loading cx_Oracle module: %s"&lt;/span&gt; % e&lt;span class="o"&gt;)&lt;/span&gt;
django.core.exceptions.ImproperlyConfigured: Error loading cx_Oracle module: dlopen&lt;span class="o"&gt;(&lt;/span&gt;TEST_VIRTUALENV/lib/python2.7/site-packages/cx_Oracle.so, 2&lt;span class="o"&gt;)&lt;/span&gt;: Library not loaded: /ade/b/3071542110/oracle/rdbms/lib/libclntsh.dylib.11.1
  Referenced from: TEST_VIRTUALENV/lib/python2.7/site-packages/cx_Oracle.so
  Reason: image not found
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="uh-oh"&gt;
&lt;h2&gt;uh oh!!&lt;/h2&gt;
&lt;p&gt;cx_Oracle seems not able to find &lt;cite&gt;/ade/b/3071542110/oracle/rdbms/lib/libclntsh.dylib.11.1&lt;/cite&gt;.
Now, I have no idea where this path come from, anyway I have &lt;cite&gt;libclntsh.dylib.11.1&lt;/cite&gt; in my
&lt;tt class="docutils literal"&gt;$ORACLE_HOME&lt;/tt&gt; so I have to tell cx_Oracle to see there. Checking with otool confirm that&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;otool -L TEST_VIRTUALENV/lib/python2.7/site-packages/cx_Oracle.so
TEST_VIRTUALENV/lib/python2.7/site-packages/cx_Oracle.so:
    /ade/b/3071542110/oracle/rdbms/lib/libclntsh.dylib.11.1 &lt;span class="o"&gt;(&lt;/span&gt;compatibility version 0.0.0, current version 0.0.0&lt;span class="o"&gt;)&lt;/span&gt;
    /usr/lib/libSystem.B.dylib &lt;span class="o"&gt;(&lt;/span&gt;compatibility version 1.0.0, current version 1225.1.1&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;we need to relync binaries they do not try to access avoided location;
to achieve this we use to command line tools &lt;a class="reference external" href="http://www.unix.com/man-page/osx/1/otool/"&gt;otool&lt;/a&gt; and &lt;a class="reference external" href="http://www.unix.com/man-page/osx/1/install_name_tool/"&gt;install_name_tool&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;install_name_tool -change /ade/b/3071542110/oracle/rdbms/lib/libclntsh.dylib.11.1 &lt;span class="nv"&gt;$ORACLE_HOME&lt;/span&gt;/&lt;span class="nv"&gt;$baselib&lt;/span&gt; TEST_VIRTUALENV/lib/python2.7/site-packages/cx_Oracle.so
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;check the result&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;otool -L TEST_VIRTUALENV/lib/python2.7/site-packages/cx_Oracle.so
TEST_VIRTUALENV/lib/python2.7/site-packages/cx_Oracle.so:
    /data/oracle/instantclient_11_2/libclntsh.dylib.11.1 &lt;span class="o"&gt;(&lt;/span&gt;compatibility version 0.0.0, current version 0.0.0&lt;span class="o"&gt;)&lt;/span&gt;
    /usr/lib/libSystem.B.dylib &lt;span class="o"&gt;(&lt;/span&gt;compatibility version 1.0.0, current version 1225.1.1&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;try again&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;./manage.py inspectdb --database&lt;span class="o"&gt;=&lt;/span&gt;pasport
...
...
raise ImproperlyConfigured&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Error loading cx_Oracle module: %s"&lt;/span&gt; % e&lt;span class="o"&gt;)&lt;/span&gt;
django.core.exceptions.ImproperlyConfigured: Error loading cx_Oracle module: dlopen&lt;span class="o"&gt;(&lt;/span&gt;/data/VENV/capi/lib/python2.7/site-packages/cx_Oracle.so, 2&lt;span class="o"&gt;)&lt;/span&gt;: Library not loaded: /ade/dosulliv_ldapmac/oracle/ldap/lib/libnnz11.dylib
Referenced from: /data/oracle/instantclient_11_2/libclntsh.dylib.11.1
Reason: image not found
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;mmmm, same problem with oracle binaries, we need to apply the same patch.&lt;/p&gt;
&lt;a name="solution"&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class="section" id="the-trick"&gt;
&lt;h2&gt;The trick&lt;/h2&gt;
&lt;p&gt;A very simple script that allow you to easily patch the files.
It accept two arguments, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-o&lt;/span&gt;&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-e&lt;/span&gt;&lt;/tt&gt; respectively to patch oracle binaries
and/or &lt;tt class="docutils literal"&gt;cx_Oracle.so&lt;/tt&gt; in the active virtualenv&lt;/p&gt;
&lt;p&gt;You only need to patch oracle binaries once, cx_Oracle need
to be patched for each virtualenv (if many)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;./cxOracleSIP.sh -o -e
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Download &lt;a class="reference external" href="../../../files/cxOracleSIP.sh"&gt;cxOracleSIP.sh&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-script"&gt;
&lt;h2&gt;The script&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;#!/bin/sh
# cxOracleSIP.sh
# Copyright (c) 2015 Stefano Apostolico
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.



help () {
    echo `basename $0` "[-o] [-e]"
    echo " -o apply patch to oracle binaries ($ORACLE_HOME)"
    [[ -z "$VIRTUAL_ENV" ]] &amp;amp;&amp;amp; V="need active virtualenv" || V=$VIRTUAL_ENV
    echo " -e apply patch to cx_Oracle ($V)"
    exit 1
}

echo $# $@

[[ $# -eq 0 ]]  &amp;amp;&amp;amp; help

while [[ $# &amp;gt; 0 ]]
    do
    key="$1"
    case $key in
        -o)
            ORA=1
            ;;
        -e) if [ -z $VIRTUAL_ENV ]; then
                echo "ERROR: no active virtualenv"
                exit 1
            fi
            ENV=1
            ;;
        *) help
           exit 1
        ;;
    esac
    shift # past argument or value
done

patch (){
    echo "patching $1"
    basetarget=`basename $1`
    otool -L $1 | awk '/oracle/ {print $1}' | awk '/[^:]$/ ' | while read lib
    do
        echo "    - $lib"
        baselib=`basename $lib`
        if [ "$basetarget" = "$baselib" ]
        then
            echo "    - changing id to $baselib for $1"
            sudo install_name_tool -id $baselib $1
        else
            echo "    - changing path id for $lib in $1"
            sudo install_name_tool -change $lib $ORACLE_HOME/$baselib $1
        fi
    done
}

if [[ $ORA -eq 1 ]];then
    find $ORACLE_HOME -maxdepth 1 -type f \( -perm -1 -o \( -perm -10 -o -perm -100 \) \) -print | while read target
    do
        patch $target
    done
fi

if [[ $ENV -eq 1 ]];then
    patch $VIRTUAL_ENV/lib/python2.7/site-packages/cx_Oracle.so
fi
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="references"&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://thecourtsofchaos.com/2013/09/16/how-to-copy-and-relink-binaries-on-osx/"&gt;How to copy (and relink) binaries on OSX using otool and install_name_tool&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://blog.caseylucas.com/2013/03/03/oracle-sqlplus-and-instant-client-on-mac-osx-without-dyld_library_path/"&gt;Oracle sqlplus and instant client on Mac OS/X without DYLD_LIBRARY_PATH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://qin.laya.com/tech_coding_help/dylib_linking.html"&gt;Creating working dylibs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://osxdaily.com/2015/10/05/disable-rootless-system-integrity-protection-mac-os-x/"&gt;How to Disable System Integrity Protection (rootless) in OS X El Capitan&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="cx_Oracle SIP"></category></entry><entry><title>About rules, best practices and experience</title><link href="http://stefanoapostolico.com/2015/10/07/rules-best-practices-and-experience.html" rel="alternate"></link><updated>2015-10-07T00:00:00+02:00</updated><author><name>Stefano Apostolico</name></author><id>tag:stefanoapostolico.com,2015-10-07:2015/10/07/rules-best-practices-and-experience.html</id><summary type="html">&lt;p&gt;What does distinguishes an architect by a good architect, 
a developer from a good developer ?&lt;/p&gt;

&lt;p&gt;Sometimes customers ask me a list of rules or best practices and guidelines 
to adopt in &lt;strong&gt;any&lt;/strong&gt; architecture and/or application.&lt;/p&gt;
&lt;p&gt;Every time, I try to explain that this list does not exist, 
is like create a list of ingredients valid for all the recipes&lt;/p&gt;
&lt;p&gt;If you ask any developer 5 rules to follow to have the perfect code he will 
look at you astonished and reply that there are many "rules" but each time 
the important one is different.&lt;/p&gt;
&lt;p&gt;But if you show a badly written code, good programmer will find the issue and will
be able to explain you why, sometimes simply annotating them as "code smell"&lt;/p&gt;
&lt;p&gt;A good architect is not who apply all the patterns and best practices 
(virtually impossible), a good architect chooses which pattern can ignore and 
which "best practices" can be violated&lt;/p&gt;
&lt;p&gt;Design has nothing related to rules and laws, is judgement, skill, 
knowledge, experience and high capacity for abstraction&lt;/p&gt;</summary><category term="it"></category></entry><entry><title>PostGIS, PostgreSQL, and Django on OS X</title><link href="http://stefanoapostolico.com/2015/06/06/osx_postgis_and_django.html" rel="alternate"></link><updated>2015-06-06T00:00:00+02:00</updated><author><name>Stefano Apostolico</name></author><id>tag:stefanoapostolico.com,2015-06-06:2015/06/06/osx_postgis_and_django.html</id><summary type="html">&lt;p&gt;Here's how I got through the installation and configuration of PostGIS on OS X (10.10 Yosemite).&lt;/p&gt;

&lt;p&gt;This post is mainly for my reference. I spent too much time to find a clear reproducible way to achieve the result.&lt;/p&gt;
&lt;p&gt;Here's what finally worked for me.&lt;/p&gt;
&lt;h3&gt;The stack&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Postgresql 9.4.3&lt;/li&gt;
&lt;li&gt;PostGIS  2.1.7&lt;/li&gt;
&lt;li&gt;Python 2.7&lt;/li&gt;
&lt;li&gt;Django 1.7&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Install PostGIS&lt;/h2&gt;
&lt;p&gt;I'm not sure I could have actually accomplished this without Homebrew. It really is a great package management tool for OS X. It handles dependencies with no pain at all.&lt;/p&gt;
&lt;h4&gt;get package info&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;brew info postgis
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;this produce something like (partial):  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;postgis&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;stable&lt;/span&gt; &lt;span class="mf"&gt;2.1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HEAD&lt;/span&gt;
&lt;span class="n"&gt;Adds&lt;/span&gt; &lt;span class="n"&gt;support&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;geographic&lt;/span&gt; &lt;span class="n"&gt;objects&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;PostgreSQL&lt;/span&gt;
&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="o"&gt;://&lt;/span&gt;&lt;span class="n"&gt;postgis&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;net&lt;/span&gt;
&lt;span class="n"&gt;Not&lt;/span&gt; &lt;span class="n"&gt;installed&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Install PostGIS&lt;/h4&gt;
&lt;p&gt;If the version you got does not match this post, try with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;brew tap postgis
brew search postgis
brew install homebrew/versions/postgis20
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;otherwise:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;brew install postgis
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Homebrew will install both PostGIS and PostgreSQL, check it with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;brew info postgres
brew info postgis
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;the default data dir &lt;code&gt;/usr/local/var/postgres&lt;/code&gt; is owned by &lt;code&gt;root&lt;/code&gt; and I prefre to run my database as non privileged user, first I need to chown the directory&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo chown sax /usr/local/var/postgres
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Initialize&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;initdb /usr/local/var/postgres  -E utf8
&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Launch postgres&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To do not receive annoying messages during my daily activities I also create the standard &lt;code&gt;postgres&lt;/code&gt; superuser&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;createuser -s -r postgres
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;PostGIS Functions and Template&lt;/h2&gt;
&lt;p&gt;PostGIS essentially is a table a couple of databse views and a many functions. You need to create a "template" database to store all of them.&lt;/p&gt;
&lt;p&gt;Create the database that we use as template for any &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;createdb template_postgis
psql -f /usr/local/share/postgis/postgis.sql template_postgis
psql -f /usr/local/share/postgis/spatial_ref_sys.sql template_postgis
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Create Django database&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;psql -c 'CREATE DATABASE wfp_commonapi_gis;' -U postgres;
psql -d gis_example -c 'CREATE EXTENSION postgis;' -U postgres;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;createdb -E UTF8 PIPPO -T template_postgis
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE:&lt;/em&gt;&lt;/strong&gt; Do not run django test before you create the "real" PostGIS database (at least with pytest) or you get a &lt;code&gt;OperationalError: FATAL:  database "DBNAME" does not exist&lt;/code&gt;. Seems that Django is not able to create a PostGIS test database if the original one does not exists.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Make PostGIS start automatically&lt;/h2&gt;
&lt;p&gt;This is done following the hint on bottom of &lt;code&gt;brew info postgres&lt;/code&gt; output&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ln -sfv /usr/local/opt/postgresql/*.plist ~/Library/LaunchAgents 
launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
&lt;/pre&gt;&lt;/div&gt;
&lt;h1&gt;Put everything togheter&lt;/h1&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class="nv"&gt;PGDATA&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"/usr/local/var/postgres"&lt;/span&gt;
&lt;span class="nv"&gt;LOG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"/usr/local/var/postgres/server.log"&lt;/span&gt;

brew install postgis &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;1
sudo chown sax &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PGDATA&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;  &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;1
initdb &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PGDATA&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; -E utf8  &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;1

pg_ctl -D &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PGDATA&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; -l &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;LOG&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt; start -w &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;1

createuser -s -r postgres  &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;1

createdb template_postgis &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;1

psql -f /usr/local/share/postgis/postgis.sql template_postgis  &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;1
psql -f /usr/local/share/postgis/spatial_ref_sys.sql template_postgis  &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit &lt;/span&gt;1

pg_ctl status
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</summary><category term="django postgis postgresql"></category></entry><entry><title>Create custom pytest skipif markers</title><link href="http://stefanoapostolico.com/2015/05/16/custom_pytest_skipif_markers.html" rel="alternate"></link><updated>2015-05-16T00:00:00+02:00</updated><author><name>Stefano Apostolico</name></author><id>tag:stefanoapostolico.com,2015-05-16:2015/05/16/custom_pytest_skipif_markers.html</id><summary type="html">&lt;p&gt;Quick example how to create reusable parametric 'skipif' markers&lt;/p&gt;

&lt;p&gt;&lt;a href="https://pytest.org/latest/contents.html"&gt;Pytest&lt;/a&gt; is my favourite testing tool, it provides a lot of useful and highly configurable features. The idea  is to create custom &lt;a href="https://pytest.org/latest/skipping.html#skipping"&gt;skipif&lt;/a&gt; markers that implement a complex logic removing the need to duplicate to much code, or using logic that cannot be read easily in one line.&lt;/p&gt;
&lt;p&gt;So instead to write these:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;@skipif('path.to.my.app' not in settings.INSTALLED_APPS)

@skipif('django.VERSION &amp;lt; (1.7))
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I want to use this syntax:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;@skipif_django('&amp;lt;1.7')

@requires_app('reversion')
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;The magic: autoused fixture and request object&lt;/h2&gt;
&lt;p&gt;We can use the &lt;a href="https://pytest.org/latest/builtin.html#_pytest.python.FixtureRequest"&gt;request&lt;/a&gt; object to retrieve infos about the running test and the &lt;a href="https://pytest.org/latest/fixture.html#autouse-fixtures-xunit-setup-on-steroids"&gt;autouse&lt;/a&gt; option to automatically execute our code.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.apps&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;apps&lt;/span&gt;

&lt;span class="nd"&gt;@pytest.fixture&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;autouse&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;skip_if_markers_logic&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_marker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'requires_app'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_marker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'requires_app'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;apps&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_installed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;pytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;skip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'skipped as {} is not installed'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_marker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'skipif_django'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;arg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_marker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'skipif_django'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;offset&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;compare&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'=='&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;operator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eq&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s"&gt;'&amp;lt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;operator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s"&gt;'&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;operator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;op&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;compare&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;op&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;op&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;operator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eq&lt;/span&gt;
            &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;op&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;operator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eq&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;op&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;val&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'.'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;pytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__version__&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;pytest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;skip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'skipped as django {}'&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;now we can:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;@skipif_django('==1.7')
def test_one():
    ...


@requires_app('reversion')
def test_two():
    ...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These examples are based on very simple logic, but it is evident how we can use any complex logic and create easy to read custom decorators.&lt;/p&gt;</summary><category term="pytest"></category></entry><entry><title>Django &amp; MSSQL on OSX (Yosemite)</title><link href="http://stefanoapostolico.com/2015/04/20/django_mssql_osx.html" rel="alternate"></link><updated>2015-04-20T00:00:00+02:00</updated><author><name>Stefano Apostolico</name></author><id>tag:stefanoapostolico.com,2015-04-20:2015/04/20/django_mssql_osx.html</id><summary type="html">&lt;p&gt;How to connect to MSSQL from Python/Django using pyodbc; The idea is to use a stack that can be easiy replicable on a Linux box (my production target).&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I have 2 macPro, almost identical, I spent 10  minutes to configure django+mssql on the first one, and one day on the second one.&lt;/p&gt;
&lt;p&gt;Here’s a step-by-step intallation that should work in any situation. Maybe I can save you some pain.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The environment:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OSX (Yosemite)&lt;/li&gt;
&lt;li&gt;Django 1.7.7&lt;/li&gt;
&lt;li&gt;python 2.7&lt;/li&gt;
&lt;li&gt;pip 6.1.1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MSSQL Server:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IP: 192.168.1.1&lt;/li&gt;
&lt;li&gt;port: 1433&lt;/li&gt;
&lt;li&gt;hostname: DB1&lt;/li&gt;
&lt;li&gt;database: test1&lt;/li&gt;
&lt;li&gt;user: username1&lt;/li&gt;
&lt;li&gt;password: password123&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Needs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://brew.sh/"&gt;homebrew&lt;/a&gt; The missing package manager for OS X&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.freetds.org/"&gt;FreeTDS&lt;/a&gt; an open source ODBC driver. A set of libraries for Unix and Linux that allows your programs to natively talk to Microsoft SQL Server and Sybase databases.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.unixodbc.org/"&gt;UnixODBC&lt;/a&gt; driver manager, a thin wrapper around the ODBC driver&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://code.google.com/p/pyodbc/"&gt;pyodbc&lt;/a&gt; is a Python 2.x and 3.x module that allows you to use ODBC to connect to almost any database from Windows, Linux, OS/X, and more.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/michiya/django-pyodbc-azure"&gt;django-pyodbc-azure&lt;/a&gt;is a Django Microsoft SQL Server external DB backend that uses ODBC by employing the pyodbc library. It supports Microsoft SQL Server and Azure SQL Database.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;Step 1: install homebrew&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Step 2: install FreeTDS and unixODBC&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;brew install unixodbc  --universal
&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Step 2: install FreeTDS and unixODBC&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;brew install freetds --with-unixodbc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;test the libraries:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;tsql -H 192.168.1.1 -U username1 -P password123 -p 1433
locale is "en_US.UTF-8"
locale charset is "UTF-8"
using default charset "UTF-8"
1&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;edit &lt;code&gt;~/.freetds.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[db1]&lt;/span&gt;
&lt;span class="na"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;192.168.1.1&lt;/span&gt;
&lt;span class="na"&gt;port&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1433&lt;/span&gt;
&lt;span class="na"&gt;tds version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;8.0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;test the config&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;tsql -S db -U username -P password
locale is "en_US.UTF-8"
locale charset is "UTF-8"
using default charset "UTF-8"
1&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;edit &lt;code&gt;~/.odbc.ini&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[odbc1]&lt;/span&gt;
&lt;span class="na"&gt;Driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/usr/local/lib/libtdsodbc.so&lt;/span&gt;
&lt;span class="na"&gt;Server&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;192.168.1.1&lt;/span&gt;
&lt;span class="na"&gt;Port&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1433&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and test it&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;isql odbc1 username1 password123 -vvvv
+---------------------------------------+
| Connected!                            |
|                                       |
| sql-statement                         |
| help [tablename]                      |
| quit                                  |
|                                       |
+---------------------------------------+
SQL&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;edit &lt;code&gt;~/.odbcinst.ini&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;[FreeTDS]&lt;/span&gt;
&lt;span class="na"&gt;Driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/usr/local/lib/libtdsodbc.so&lt;/span&gt;
&lt;span class="na"&gt;Setup&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;/usr/local/lib/libtdsodbc.so&lt;/span&gt;
&lt;span class="na"&gt;FileUsage&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Now you can edit your &lt;code&gt;odbc.ini&lt;/code&gt; and change&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Driver = /usr/local/lib/libtdsodbc.so
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Driver = FreeTDS
&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Step 3: download, edit and install pyodbc&lt;/h5&gt;
&lt;p&gt;pyodbc usees with unixodbc on Linux, but iODBC drivers on Mac. We need to configure the pyodbc installation such that it works with unixodbc.&lt;/p&gt;
&lt;p&gt;First we activate the virtualenv, download pyodbc, edit the setup.py to use unixodbc and install it in the virtualenv&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: I use &lt;a href="https://virtualenvwrapper.readthedocs.org/en/latest/"&gt;virtualenv-wrappper&lt;/a&gt; to manage virtualenvs&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;workon [project_virtualenv] 
mkdir TEMP
cd TEMP
pip install --download . pyodbc
unzip pyodbc-3.0.7.zip
cd pyodbc-3.0.7
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;edit these lines in &lt;code&gt;setup.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;elif sys.platform == 'darwin':
    # OS/X now ships with iODBC.
    settings['libraries'].append('iodbc')
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;elif sys.platform == 'darwin':
    # OS/X now ships with iODBC.
    settings['libraries'].append('odbc')
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;build&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;python setup.py build_ext --include-dirs=/usr/local/include/ --library-dirs=/usr/local/lib/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and install and remove build dir&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install .
cdproject
rm -fr TEMP
&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Step 4: install django database driver&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install django-pyodbc-azure
&lt;/pre&gt;&lt;/div&gt;
&lt;h5&gt;Step 5: Edit your django settings&lt;/h5&gt;
&lt;p&gt;you have multiple options here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you can rely on your &lt;code&gt;~/odbc.ini&lt;/code&gt; with&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;DATABASES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;'default'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s"&gt;'ENGINE'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'sql_server.pyodbc'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;'NAME'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'test1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;'USER'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'username1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s"&gt;'PASSWORD'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'password1'&lt;/span&gt;
            &lt;span class="s"&gt;'OPTIONS'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s"&gt;'host_is_server'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s"&gt;'dsn'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'odbc1'&lt;/span&gt;  &lt;span class="c"&gt;# as in odbc.ini&lt;/span&gt;
            &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;DATABASES = {
    'default': {
        'ENGINE': 'sql_server.pyodbc',
        'NAME': 'test1',
        'USER': 'username1',
        'PASSWORD': 'password123',
        'HOST': '192.168.1.1',
        'PORT': '1433',
        'OPTIONS': {
            'host_is_server': True,
        },
},
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note anyway that FreeTDS driver does not read user credentials from odbc.ini, you have to put them in your &lt;code&gt;settings.py&lt;/code&gt;&lt;/p&gt;
&lt;h1&gt;Some of the errors during the way.....&lt;/h1&gt;
&lt;p&gt;Not sure why I got these errors &lt;strong&gt;only on one of my laptop&lt;/strong&gt;. If anyone have the answer please let me know.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ld: library not found for -lodbc&lt;div class="highlight"&gt;&lt;pre&gt;... build/temp.macosx-10.10-intel-2.7/data/PROGETTI/ONU_WorldFoodProgramme/wfp-commonapi/TEMP/pyodbc-3.0.7/src/sqlwchar.o -L/usr/local/lib/ -lodbc -o build/lib.macosx-10.10-intel-2.7/pyodbc.so
ld: library not found for -lodbc
clang: error: linker command failed with exit code 1 (use -v to see invocation)
error: command 'c++' failed with exit status 1
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Solved with &lt;code&gt;--library-dirs=/usr/local/lib/&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;fatal error: 'sql.h' file not found&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;...&lt;/span&gt; &lt;span class="n"&gt;TEMP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pyodbc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;3.0.7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Wno&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;strings&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;Wno&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;deprecated&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;declarations&lt;/span&gt;
&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;included&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt; &lt;span class="n"&gt;TEMP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pyodbc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;3.0.7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;cpp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;TEMP&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pyodbc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;3.0.7&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;src&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;pyodbc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;h&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;52&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;fatal&lt;/span&gt; &lt;span class="nl"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;not&lt;/span&gt; &lt;span class="n"&gt;found&lt;/span&gt;
&lt;span class="cp"&gt;#include &amp;lt;sql.h&amp;gt;&lt;/span&gt;
 &lt;span class="o"&gt;^&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="n"&gt;generated&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nl"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="n"&gt;cc&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt; &lt;span class="n"&gt;failed&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;exit&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Solved with &lt;code&gt;--include-dirs=/usr/local/include/&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;file was built for x86_64 which is not the architecture being linked&lt;div class="highlight"&gt;&lt;pre&gt;... emp.macosx-10.10-intel-2.7/TEMP/pyodbc-3.0.7/src/pyodbcmodule.o build/temp.macosx-10.10-intel-2.7/TEMP/pyodbc-3.0.7/src/row.o build/temp.macosx-10.10-intel-2.7/TEMP/pyodbc-3.0.7/src/sqlwchar.o -L/usr/local/lib/ -lodbc -o build/lib.macosx-10.10-intel-2.7/pyodbc.so     
ld: warning: ignoring file /usr/local/lib/libodbc.dylib, file was built for x86_64 which is not the architecture being linked (i386): /usr/local/lib/libodbc.dylib
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Solved with: add &lt;code&gt;--universal&lt;/code&gt; when &lt;code&gt;brew install unixodbc&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;'FreeTDS' : file not found &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="mo"&gt;01000&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;"[01000] [unixODBC][Driver Manager]Can't open lib 'FreeTDS' : file not found (0) (SQLDriverConnect)"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Solved adding &lt;code&gt;[FreeTDS]&lt;/code&gt; entry in &lt;code&gt;odbcinst.ini&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unable to connect to data source&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;django&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;utils&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nl"&gt;Error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="mi"&gt;08001&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;08001&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;unixODBC&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;FreeTDS&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;SQL&lt;/span&gt; &lt;span class="n"&gt;Server&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="n"&gt;Unable&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;connect&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SQLDriverConnect&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Got these error for many reasons, usually related to the &lt;code&gt;settings.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Solved with: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    'USERNAME': ...
    'PASSWORD':...
    'OPTIONS': {
        'host_is_server': True,
    },
&lt;/pre&gt;&lt;/div&gt;</summary><category term="django osx"></category></entry><entry><title>Handle CSRF token in Locust test</title><link href="http://stefanoapostolico.com/2014/12/07/hande-csrf-token-in-locust-test.html" rel="alternate"></link><updated>2014-12-07T00:00:00+01:00</updated><author><name>Stefano Apostolico</name></author><id>tag:stefanoapostolico.com,2014-12-07:2014/12/07/hande-csrf-token-in-locust-test.html</id><summary type="html">&lt;p&gt;Locust and Django CSRF&lt;/p&gt;

&lt;p&gt;Simple solution to handle Django 
&lt;a href="https://docs.djangoproject.com/en/dev/ref/csrf/"&gt;Cross Site Request Forgery protection&lt;/a&gt;
into &lt;a href="http://locust.io/"&gt;Locust&lt;/a&gt; load tests&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;UserBehavior&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;TaskSet&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_start&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;login&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/auth/login/"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;csrftoken&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cookies&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'csrftoken'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/auth/login/"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                                    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"username"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"admin"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                     &lt;span class="s"&gt;"password"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;"password"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
                                    &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;"X-CSRFToken"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;csrftoken&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;WebsiteUser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;HttpLocust&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;host&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'http://localhost:8000'&lt;/span&gt;
    &lt;span class="n"&gt;task_set&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UserBehavior&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="locust"></category><category term="performance"></category><category term="django"></category></entry><entry><title>Don't put the socks in the fridge</title><link href="http://stefanoapostolico.com/2014/11/30/dont-put-the-socks-in-the-fridge.html" rel="alternate"></link><updated>2014-11-30T00:00:00+01:00</updated><author><name>Stefano Apostolico</name></author><id>tag:stefanoapostolico.com,2014-11-30:2014/11/30/dont-put-the-socks-in-the-fridge.html</id><summary type="html">&lt;p&gt;In response to a set of recommendations I was presenting about an Enterprise 
Java solution architecture, a CTO once asked me: 
&lt;em&gt;"Yeah, we've got this 2 GB EAR with 400+ WAR deployments inside. 
So what's the problem? The system still is completely functional!"&lt;/em&gt;. 
My instant feeling was 
&lt;em&gt;"Ok, this CTO himself is a much bigger problem than this EAR!"&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A few years ago, I was in India to train developers of a local IT company. 
It was a great experience - I met a lot of wonderful people there, few of whom 
I'm still in touch with. Many of them were good developers, working hard with a hunger 
to learn their subjects deeply at work. Much of the focus in my sessions was on practices 
of designing large scale object-oriented systems. In a conversation about core design 
principles, during a rapid fire response, I submitted to them this idea - 
&lt;em&gt;"Yes, you can put the socks in the fridge, but choose NOT to put it there!"&lt;/em&gt;. &lt;/p&gt;
&lt;p&gt;My intent was to explain that when you design there is a place for everything, and sometimes a written rule or law is not needed to feel that something is wrongly placed (beyond principles of High Cohesion and Least Surprise, there is common sense, fundamental cleanliness to respect). The metaphor resonated with them instantly - they immediately understood the principle without any further debate. &lt;/p&gt;
&lt;p&gt;At that time I had no idea how many times I would have to use it again and again!&lt;/p&gt;
&lt;p&gt;In further years, I found it very frustrating when people claiming to be technical leads and architects taking the stand of "it isn't wrong if there's no rule that says so", like "no rule says you can't mix SQL with HTML markup" or "no rule says you can't use spaces for the dictionary keys for a REST API". Much effort to make them see beyond the need of defining rules for everything - with long explanations about the innumerable risks in such design - were mostly futile. They'd rather stick to approved rules than take a lead or leap of faith in common sense.&lt;/p&gt;
&lt;p&gt;When you find yourself submitting an idea or approach widely shared by the community as a convention (with profound logic behind it that you know and understand), only to be countered by your audience saying "Show me the rule defining so" - take a hint and end the discussion as soon as possible. I've come to understand that such resistance doesn't come from the unfamiliarity of the topic - but from the gap between the interlocutors from a technical standpoint and more seriously, the values standpoint. &lt;/p&gt;
&lt;p&gt;It's not about fighting, but it's about choosing your fights!&lt;/p&gt;</summary></entry><entry><title>Playing with Pelican</title><link href="http://stefanoapostolico.com/2014/11/27/playing-with-pelican.html" rel="alternate"></link><updated>2014-11-27T00:00:00+01:00</updated><author><name>Stefano Apostolico</name></author><id>tag:stefanoapostolico.com,2014-11-27:2014/11/27/playing-with-pelican.html</id><summary type="html">&lt;p&gt;I spent one day trying to put this blog on Heroku.
Googling on the web many authors explain how to create a static site on Heroku,
and Pelican web site offer a ready to use
&lt;a href="http://blog.getpelican.com/using-pelican-with-heroku.html"&gt;buildpack&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Anyway I did not like any of these solutions as all of them
seem recompile and install the full stack (nginx, pelican, python....)&lt;/p&gt;
&lt;p&gt;I moved to a more pratical and easy to implement solution:
&lt;a href="https://pages.github.com/"&gt;GitHub pages&lt;/a&gt; and &lt;a href="http://docs.getpelican.com/en/3.5.0"&gt;Pelican&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Install Pelican&lt;/h3&gt;
&lt;p&gt;To install Pelican and other Python package dependencies in a virtual environment, 
I followed the instructions in the official 
&lt;a href="http://pelican.readthedocs.org/en/3.5.0/quickstart.html"&gt;Pelican documentation&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install pelican Markdown typogrify
pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I enabled article pagination so that I didn't end up with all the posts on a single 
page. The &lt;code&gt;Makefile&lt;/code&gt; is incredibly useful, so I enabled that. 
It allows you to compile the website with &lt;code&gt;make html&lt;/code&gt; and check it live with &lt;code&gt;make serve&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;Because I want to use Github pages I answered NO to all the questions about
&lt;code&gt;Dropbox&lt;/code&gt;, &lt;code&gt;S3&lt;/code&gt;, &lt;code&gt;FTP&lt;/code&gt; and &lt;code&gt;SSH&lt;/code&gt; anyway the related code is still 
in the &lt;code&gt;Makefile&lt;/code&gt; so I removed it manually.&lt;/p&gt;
&lt;h3&gt;Configure plugins&lt;/h3&gt;
&lt;p&gt;To configure plugins simply clone pelican-plugins as git submodule with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git add submodule https://github.com/getpelican/pelican-plugins
git submodule update  --init --recursive
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and enable what you like in &lt;code&gt;pelicanconf.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'pelican-plugins'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'interlinks'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s"&gt;'pelican_fontawesome'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s"&gt;'related_posts'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s"&gt;'summary'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s"&gt;'sitemap'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s"&gt;'simple_footnotes'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Configure Github&lt;/h3&gt;
&lt;p&gt;For Github you need to put the domain of your site inside a CNAME (must be uppercase)
file at the root of your site. &lt;/p&gt;
&lt;p&gt;More details how to configure your domain can be found 
&lt;a href="http://docs.getpelican.com/en/3.5.0/tips.html#extra-tips"&gt;here&lt;/a&gt; (Tip #2),
&lt;a href="https://help.github.com/articles/about-custom-domains-for-github-pages-sites/"&gt;here&lt;/a&gt;
and &lt;a href="https://help.github.com/articles/my-custom-domain-isn-t-working/"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For my configuration I used &lt;/p&gt;
&lt;p&gt;&lt;code&gt;content/extras/CNAME&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;stefanoapostolico.com
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;pelicanconf.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'images'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'extras/README.rst'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'extras/CNAME'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="s"&gt;'extras/robots.txt'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="n"&gt;EXTRA_PATH_METADATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;'extras/README.rst'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'README.rst'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s"&gt;'extras/CNAME'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'CNAME'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s"&gt;'extras/robots.txt'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'robots.txt'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Minor improvements&lt;/h3&gt;
&lt;h4&gt;Get metadata from path&lt;/h4&gt;
&lt;p&gt;To store articles in a structure like 
&lt;code&gt;category/YEAR/MONTH/DAY-slug&lt;/code&gt; so I updated my &lt;code&gt;pelicanconf.py&lt;/code&gt; as &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;   &lt;span class="n"&gt;PATH_METADATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'\A(?P&amp;lt;category&amp;gt;[^/]+)/(?P&amp;lt;date&amp;gt;\d{4}/\d{2}/\d{2})-(?P&amp;lt;slug&amp;gt;.*)(.md|.rst)'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can always override date, slug and category in your post.&lt;/p&gt;
&lt;h4&gt;Serve file with different path&lt;/h4&gt;
&lt;p&gt;To serve your articles with url like &lt;code&gt;/YEAR/MONTH/DAY/slug.html&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;ARTICLE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'{date:%Y}/{date:%m}/{date:&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;}/{slug}.html'&lt;/span&gt;
    &lt;span class="n"&gt;ARTICLE_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'{date:%Y}/{date:%m}/{date:&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;}/{slug}.html'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You must set both the setting.&lt;/p&gt;
&lt;p&gt;you can see the result &lt;a href="https://github.com/saxix/stefanoapostolico.com"&gt;here&lt;/a&gt;&lt;/p&gt;</summary><category term="pelican"></category><category term="python"></category><category term="github pages"></category></entry><entry><title>Start blogging</title><link href="http://stefanoapostolico.com/2014/11/22/start-blogging.html" rel="alternate"></link><updated>2014-11-22T00:00:00+01:00</updated><author><name>Stefano Apostolico</name></author><id>tag:stefanoapostolico.com,2014-11-22:2014/11/22/start-blogging.html</id><summary type="html">&lt;p&gt;After years spent to coding and getting benefits from someone else blog,
I decided to have my own one.&lt;/p&gt;

&lt;p&gt;Probably because I'm not comfortable to write in english, 
or only laziness I spent most of my time sharing my experience by voice with friends, 
colleagues and coders around the world.&lt;/p&gt;
&lt;p&gt;Anyway as I have been able to work in four continents, 
probably people take care more what I can say and less in my ability to 
manage English language.&lt;/p&gt;
&lt;p&gt;Today I have more free time and desire to share, so I started my personal blog.&lt;/p&gt;</summary></entry></feed>