<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Stefano Apostolico's Blog</title><link>http://stefanoapostolico.com/</link><description></description><atom:link href="http://stefanoapostolico.com/feeds/tags/pelican.rss.xml" rel="self"></atom:link><lastBuildDate>Thu, 27 Nov 2014 00:00:00 +0100</lastBuildDate><item><title>Playing with Pelican</title><link>http://stefanoapostolico.com/2014/11/27/playing-with-pelican.html</link><description>&lt;p&gt;I spent one day trying to put this blog on Heroku.
Googling on the web many authors explain how to create a static site on Heroku,
and Pelican web site offer a ready to use
&lt;a href="http://blog.getpelican.com/using-pelican-with-heroku.html"&gt;buildpack&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Anyway I did not like any of these solutions as all of them
seem recompile and install the full stack (nginx, pelican, python....)&lt;/p&gt;
&lt;p&gt;I moved to a more pratical and easy to implement solution:
&lt;a href="https://pages.github.com/"&gt;GitHub pages&lt;/a&gt; and &lt;a href="http://docs.getpelican.com/en/3.5.0"&gt;Pelican&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Install Pelican&lt;/h3&gt;
&lt;p&gt;To install Pelican and other Python package dependencies in a virtual environment, 
I followed the instructions in the official 
&lt;a href="http://pelican.readthedocs.org/en/3.5.0/quickstart.html"&gt;Pelican documentation&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install pelican Markdown typogrify
pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I enabled article pagination so that I didn't end up with all the posts on a single 
page. The &lt;code&gt;Makefile&lt;/code&gt; is incredibly useful, so I enabled that. 
It allows you to compile the website with &lt;code&gt;make html&lt;/code&gt; and check it live with &lt;code&gt;make serve&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;Because I want to use Github pages I answered NO to all the questions about
&lt;code&gt;Dropbox&lt;/code&gt;, &lt;code&gt;S3&lt;/code&gt;, &lt;code&gt;FTP&lt;/code&gt; and &lt;code&gt;SSH&lt;/code&gt; anyway the related code is still 
in the &lt;code&gt;Makefile&lt;/code&gt; so I removed it manually.&lt;/p&gt;
&lt;h3&gt;Configure plugins&lt;/h3&gt;
&lt;p&gt;To configure plugins simply clone pelican-plugins as git submodule with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git add submodule https://github.com/getpelican/pelican-plugins
git submodule update  --init --recursive
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and enable what you like in &lt;code&gt;pelicanconf.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'pelican-plugins'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'interlinks'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s"&gt;'pelican_fontawesome'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s"&gt;'related_posts'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s"&gt;'summary'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s"&gt;'sitemap'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
               &lt;span class="s"&gt;'simple_footnotes'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Configure Github&lt;/h3&gt;
&lt;p&gt;For Github you need to put the domain of your site inside a CNAME (must be uppercase)
file at the root of your site. &lt;/p&gt;
&lt;p&gt;More details how to configure your domain can be found 
&lt;a href="http://docs.getpelican.com/en/3.5.0/tips.html#extra-tips"&gt;here&lt;/a&gt; (Tip #2),
&lt;a href="https://help.github.com/articles/about-custom-domains-for-github-pages-sites/"&gt;here&lt;/a&gt;
and &lt;a href="https://help.github.com/articles/my-custom-domain-isn-t-working/"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For my configuration I used &lt;/p&gt;
&lt;p&gt;&lt;code&gt;content/extras/CNAME&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;stefanoapostolico.com
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;pelicanconf.py&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'images'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'extras/README.rst'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'extras/CNAME'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="s"&gt;'extras/robots.txt'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="n"&gt;EXTRA_PATH_METADATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;'extras/README.rst'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'README.rst'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s"&gt;'extras/CNAME'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'CNAME'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s"&gt;'extras/robots.txt'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'robots.txt'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Minor improvements&lt;/h3&gt;
&lt;h4&gt;Get metadata from path&lt;/h4&gt;
&lt;p&gt;To store articles in a structure like 
&lt;code&gt;category/YEAR/MONTH/DAY-slug&lt;/code&gt; so I updated my &lt;code&gt;pelicanconf.py&lt;/code&gt; as &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;   &lt;span class="n"&gt;PATH_METADATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'\A(?P&amp;lt;category&amp;gt;[^/]+)/(?P&amp;lt;date&amp;gt;\d{4}/\d{2}/\d{2})-(?P&amp;lt;slug&amp;gt;.*)(.md|.rst)'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can always override date, slug and category in your post.&lt;/p&gt;
&lt;h4&gt;Serve file with different path&lt;/h4&gt;
&lt;p&gt;To serve your articles with url like &lt;code&gt;/YEAR/MONTH/DAY/slug.html&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;    &lt;span class="n"&gt;ARTICLE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'{date:%Y}/{date:%m}/{date:&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;}/{slug}.html'&lt;/span&gt;
    &lt;span class="n"&gt;ARTICLE_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'{date:%Y}/{date:%m}/{date:&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;}/{slug}.html'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You must set both the setting.&lt;/p&gt;
&lt;p&gt;you can see the result &lt;a href="https://github.com/saxix/stefanoapostolico.com"&gt;here&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Stefano Apostolico</dc:creator><pubDate>Thu, 27 Nov 2014 00:00:00 +0100</pubDate><guid>tag:stefanoapostolico.com,2014-11-27:2014/11/27/playing-with-pelican.html</guid><category>pelican</category><category>python</category><category>github pages</category></item></channel></rss>